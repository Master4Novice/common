import { setNameValue } from '../utils/string-number';

export const HttpStatus = Object.freeze({
    CONTINUE:  setNameValue("Continue", 100),
    SWITCHING_PROTOCOLS:  setNameValue("Switching Protocols", 101), 
    PROCESSING:  setNameValue("Processing", 102),
    OK:  setNameValue("OK", 200),
    CREATED:  setNameValue("Created", 201),
    ACCEPTED:  setNameValue("Accepted", 202),
    NON_AUTHORITATIVE_INFORMATION:  setNameValue("Non-Authoritative Information", 203),
    NO_CONTENT:  setNameValue("No Content", 204),
    RESET_CONTENT:  setNameValue("Reset Content", 205),
    PARTIAL_CONTENT:  setNameValue("Partial Content", 206),
    MULTI_STATUS:  setNameValue("Multi-Status", 207),
    ALREADY_REPORTED:  setNameValue("Already Reported", 208),
    IM_USED:  setNameValue("IM Used", 226),
    MULTIPLE_CHOICES:  setNameValue("Multiple Choices", 300),
    MOVED_PERMANENTLY:  setNameValue("Moved Permanently", 301), 
    MOVED_TEMPORARILY:  setNameValue("Moved Temporarily", 302),
    FOUND:  setNameValue("Found", 302),
    SEE_OTHER:  setNameValue("See Other", 303),  
    NOT_MODIFIED:  setNameValue("Not Modified", 304),
    USE_PROXY:  setNameValue("Use Proxy", 305),
    TEMPORARY_REDIRECT:  setNameValue("Temporary Redirect", 307),
    BAD_REQUEST:  setNameValue("Bad Request", 400),
    UNAUTHORIZED:  setNameValue("Unauthorized", 401),
    PAYMENT_REQUIRED:  setNameValue("Payment Required", 402),
    FORBIDDEN:  setNameValue("Forbidden", 403),
    NOT_FOUND:  setNameValue("Not Found", 404),
    METHOD_NOT_ALLOWED:  setNameValue("Method Not Allowed", 405),
    NOT_ACCEPTABLE:  setNameValue("Not Acceptable", 406),
    PROXY_AUTHENTICATION_REQUIRED:  setNameValue("Proxy Authentication Required", 407),
    REQUEST_TIMEOUT:  setNameValue("Request Timeout", 408),
    CONFLICT:  setNameValue("Conflict", 409),
    GONE:  setNameValue("Gone", 410),
    LENGTH_REQUIRED:  setNameValue("Length Required", 411),
    PRECONDITION_FAILED:  setNameValue("Precondition failed", 412),
    REQUEST_ENTITY_TOO_LARGE:  setNameValue("Request Entity Too Large", 413),
    REQUEST_URI_TOO_LONG:  setNameValue("Request-URI Too Long", 414),
    UNSUPPORTED_MEDIA_TYPE:  setNameValue("Unsupported Media Type", 415),
    REQUESTED_RANGE_NOT_SATISFIABLE:  setNameValue("Requested Range Not Satisfiable", 416),
    EXPECTATION_FAILED:  setNameValue("Expectation Failed", 417),
    INSUFFICIENT_SPACE_ON_RESOURCE:  setNameValue("Insufficient Space on Resource", 419),
    METHOD_FAILURE:  setNameValue("Method Failure", 420), 
    DESTINATION_LOCKED:  setNameValue("Destination Locked", 421),
    UNPROCESSABLE_ENTITY:  setNameValue("Unprocessable Entity", 422),
    LOCKED:  setNameValue("Locked", 423),
    FAILED_DEPENDENCY:  setNameValue("Failed Dependency", 424),
    UPGRADE_REQUIRED:  setNameValue("Upgrade Required", 426),
    INTERNAL_SERVER_ERROR:  setNameValue("Internal Server Error", 500),
    NOT_IMPLEMENTED:  setNameValue("Not Implemented", 501),
    BAD_GATEWAY:  setNameValue("Bad Gateway", 502),
    SERVICE_UNAVAILABLE:  setNameValue("Service Unavailable", 503),
    GATEWAY_TIMEOUT:  setNameValue("Gateway Timeout", 504),
    HTTP_VERSION_NOT_SUPPORTED:  setNameValue("HTTP Version Not Supported", 505),
    VARIANT_ALSO_NEGOTIATES:  setNameValue("Variant Also Negotiates", 506),
    INSUFFICIENT_STORAGE:  setNameValue("Insufficient Storage", 507),
    LOOP_DETECTED:  setNameValue("Loop Detected", 508),
    NOT_EXTENDED:  setNameValue("Not Extended", 510)  
});
   

          
